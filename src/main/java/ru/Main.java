package ru;

public class Main {
    public static void main(String[] args) {

        /*Задача 2
        Практика ООП. *Инкапсуляция #2. Квадрат - задание необязательное
        Данное задание не является обязательным для решения. Вы можете выполнить его для дополнительной тренировки навыка по данной теме

        Создайте класс Квадрат (Square). Квадрат описывается следующими характеристиками:

        Координата левого верхнего угла по Х: целое число
        Координата левого верхнего угла по Y: целое число
        Длина стороны: целое число (sideLength)
        Создается путем указания координаты x и y левого верхнего угла и размера стороны
        Может быть приведен к строке вида “Квадрат в точке T со стороной N”, где N – длина стороны, а T – результат приведения к строке верхнего левого угла (toString)
        Состояние квадрата можно изменить в любой момент
        Длина стороны обязана быть всегда положительной
        Вместо координат X и Y можно (но не обязательно) использовать класс Точка из задачи 1 (точка координат).

        Задача считается решенной корректно, если выполняются требования инкапсуляции.*/

        // Создаем квадрат
        Square square = new Square(1, 4, 10);
        System.out.println(square); // Квадрат в точке (1, 4 со стороной 10)

        // Изменим координаты и размер
        square.setX(10);
        square.setY(15);
        square.setSideLength(25);
        System.out.println(square); // Квадрат в точке (10, 15 со стороной 25)


        /*Задача 1
        Практика ООП. Инкапсуляция #1. Дробь
        Создайте класс Дробь (Fraction) со следующими особенностями:

        Имеет числитель (numerator): целое число
        Имеет знаменатель (denominator): целое число
        Дробь может быть создана с указанием числителя и знаменателя
        Объекты дробей не могут изменять свое состояние
        Для числителя задать отрицательное значение можно, в этом случае вся дробь считается отрицательной
        Для знаменателя отрицательное значение недопустимо
        Может вернуть строковое представление вида “числитель/знаменатель” (toString)
        Может выполнять операции сложения, вычитания с другой Дробью или целым числом. Результатом операции должна быть новая Дробь
        Затем необходимо выполнить следующие задачи:

        Создать несколько экземпляров дробей
        Посчитать f1.sum(f2).sum(f3).minus(5), где f1 это одна треть, f2 две пятых, а f3 это семь восьмых*/

        /*
        // Создать несколько экземпляров дробей: где f1 это одна треть, f2 две пятых, а f3 это семь восьмых
        Fraction f1 = new Fraction(1, 3); // 1/3
        Fraction f2 = new Fraction(2, 5); // 2/5
        Fraction f3 = new Fraction(7, 8); // 7/8

        // Посчитать f1.sum(f2).sum(f3).minus(5)
        Fraction result = f1.sum(f2).sum(f3).minus(5);

        // Результат
        System.out.println("f1 = " + f1);
        System.out.println("f2 = " + f2);
        System.out.println("f3 = " + f3);
        System.out.println("f1.sum(f2).sum(f3).minus(5) = " + result);
         */
    }
}